Index: tslib-1.0/plugins/input-raw.c
===================================================================
--- tslib-1.0.orig/plugins/input-raw.c	2008-07-08 09:55:09.000000000 +0200
+++ tslib-1.0/plugins/input-raw.c	2008-07-08 09:57:48.000000000 +0200
@@ -52,12 +52,19 @@
 	u_int64_t absbit;
 
 	if (! ((ioctl(ts->fd, EVIOCGVERSION, &version) >= 0) &&
-		(version == EV_VERSION) &&
-		(ioctl(ts->fd, EVIOCGBIT(0, sizeof(bit) * 8), &bit) >= 0) &&
-		(bit & (1 << EV_ABS)) &&
-		(ioctl(ts->fd, EVIOCGBIT(EV_ABS, sizeof(absbit) * 8), &absbit) >= 0) &&
-		(absbit & (1 << ABS_X)) &&
-		(absbit & (1 << ABS_Y)) && (absbit & (1 << ABS_PRESSURE)))) {
+		(ioctl(ts->fd, EVIOCGBIT(0, sizeof(bit)), &bit) >= 0) &&
+		(ioctl(ts->fd, EVIOCGBIT(EV_ABS, sizeof(absbit)), &absbit) >= 0))) {
+		fprintf(stderr, "ioctl failed against the touchscreen device\n");
+		return -1;
+	}
+
+#if __BYTE_ORDER == __BIG_ENDIAN
+	absbit = (absbit >> 32) | (absbit << 32);
+#endif
+
+	if (! ((version == EV_VERSION) && (bit & (1 << EV_ABS)) &&
+		(absbit & (1ULL << ABS_X)) && (absbit & (1ULL << ABS_Y)) &&
+		(absbit & (1ULL << ABS_PRESSURE)))) {
 		fprintf(stderr, "selected device is not a touchscreen I understand\n");
 		return -1;
 	}
@@ -65,7 +72,7 @@
 	if (bit & (1 << EV_SYN))
 		i->using_syn = 1;
 
-	return 0;
+	return 1;
 }
 
 static int ts_input_read(struct tslib_module_info *inf,
