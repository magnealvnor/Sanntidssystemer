--- a/libc/sysdeps/linux/common/prctl.c
+++ b/libc/sysdeps/linux/common/prctl.c
@@ -8,10 +8,29 @@
  */
 
 #include <sys/syscall.h>
+#include <sys/prctl.h>
 #include <stdarg.h>
-/* psm: including sys/prctl.h would depend on kernel headers */
 
 #ifdef __NR_prctl
-extern int prctl (int, long, long, long, long);
-_syscall5(int, prctl, int, option, long, arg2, long, arg3, long, arg4, long, arg5)
+#define __NR___syscall_prctl	__NR_prctl
+static inline _syscall5(int, __syscall_prctl, int, option, long, arg2, long, arg3, long,
+		arg4, long, arg5);
+
+int prctl(int option, ...) {
+	long arg2 = 0;
+	va_list ap;
+
+	va_start(ap, option);
+
+	if (option != PR_GET_DUMPABLE
+			&& option != PR_GET_TIMING
+			&& option != PR_GET_SECCOMP
+			&& option != PR_GET_SECUREBITS
+			&& option != PR_GET_KEEPCAPS)
+		arg2 = va_arg(ap, long);
+
+	va_end(ap);
+
+	return __syscall_prctl(option, arg2, 0, 0, 0);
+}
 #endif
